arguments:
    parameters:
        - displayName: Dataset path
          hint: Path to annotated data (COCO format) in default object storage. In CVAT, this parameter will be pre-populated.
          name: cvat-annotation-path
          value: artifacts/{{workflow.namespace}}/annotations/
          visibility: internal
        - displayName: Validation split size
          hint: Enter validation set size in percentage of full dataset. (0 - 100)
          name: val-split
          type: input.number
          value: 10
          visibility: public
        - displayName: Number of augmentation cycles
          hint: Number of augmentation cycles, zero means no data augmentation
          name: num-augmentation-cycles
          type: input.number
          value: 1
          visibility: public
        - displayName: Preprocessing parameters
          hint: See <a href="https://albumentations.ai/docs/api_reference/augmentations/transforms/" target="_blank">documentation</a> for more information on parameters.
          name: preprocessing-parameters
          type: textarea.textarea
          value: |-
            RandomBrightnessContrast:
                p: 0.2
            GaussianBlur:
                p: 0.3
            GaussNoise:
                p: 0.4
            HorizontalFlip:
                p: 0.5
            VerticalFlip:
                p: 0.3
          visibility: public
        - displayName: Model
          hint: TF Detection API's model to use for training.
          name: cvat-model
          options:
            - name: Faster RCNN-ResNet 101-COCO
              value: frcnn-res101-coco
            - name: Faster RCNN-ResNet 101-Low Proposal-COCO
              value: frcnn-res101-low
            - name: Faster RCNN-ResNet 50-COCO
              value: frcnn-res50-coco
            - name: Faster RCNN-NAS-COCO
              value: frcnn-nas-coco
            - name: SSD MobileNet V1-COCO
              value: ssd-mobilenet-v1-coco2
            - name: SSD MobileNet V2-COCO
              value: ssd-mobilenet-v2-coco
            - name: SSDLite MobileNet-COCO
              value: ssdlite-mobilenet-coco
          type: select.select
          value: frcnn-res50-coco
          visibility: public
        - displayName: Number of classes
          hint: Number of classes. In CVAT, this parameter will be pre-populated.
          name: cvat-num-classes
          value: "10"
          visibility: internal
        - displayName: Hyperparameters
          hint: See <a href="https://docs.onepanel.ai/docs/reference/workflows/training#tfod-hyperparameters" target="_blank">documentation</a> for more information on parameters.
          name: hyperparameters
          type: textarea.textarea
          value: 'num_steps: 10000'
          visibility: public
        - displayName: CVAT dump format
          name: dump-format
          value: cvat_coco
          visibility: private
        - displayName: Checkpoint path
          hint: Path to the last fine-tune checkpoint for this model in default object storage. Leave empty if this is the first time you're training this model.
          name: cvat-finetune-checkpoint
          value: ""
          visibility: public
        - displayName: Select TensorFlow image
          hint: Select the GPU image if you are running on a GPU node pool
          name: tf-image
          options:
            - name: TensorFlow 1.13.1 CPU Image
              value: tensorflow/tensorflow:1.13.1-py3
            - name: TensorFlow 1.13.1 GPU Image
              value: tensorflow/tensorflow:1.13.1-gpu-py3
          type: select.select
          value: tensorflow/tensorflow:1.13.1-py3
          visibility: public
        - displayName: Node pool
          hint: Name of node pool or group to run this workflow task
          name: sys-node-pool
          required: true
          type: select.nodepool
          value: 'gpu'
          visibility: public
entrypoint: main
templates:
    - dag:
        tasks:
            - name: preprocessing
              template: preprocessing
            - arguments:
                artifacts:
                    - from: '{{tasks.preprocessing.outputs.artifacts.processed-data}}'
                      name: data
              dependencies:
                - preprocessing
              name: train-model
              template: tensorflow
      name: main
    - container:
        args:
            - |
              apt-get update && \
              pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple && \
              apt-get install -y python3-pip git wget unzip libglib2.0-0 libsm6 libxext6 libxrender-dev && \
              pip install --upgrade pip && \
              pip install pillow lxml Cython contextlib2 matplotlib numpy scipy pycocotools pyyaml test-generator && \
              cd /mnt/src/tf/research && \
              export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim && \
              mkdir -p /mnt/src/protoc && \
              wget -P /mnt/src/protoc https://github.com/protocolbuffers/protobuf/releases/download/v3.10.1/protoc-3.10.1-linux-x86_64.zip && \
              cd /mnt/src/protoc/ && \
              unzip protoc-3.10.1-linux-x86_64.zip && \
              cd /mnt/src/tf/research/ && \
              /mnt/src/protoc/bin/protoc object_detection/protos/*.proto --python_out=. && \
              cd /mnt/src/train/workflows/tf-object-detection-training && \
              python main.py \
                --extras="{{workflow.parameters.hyperparameters}}" \
                --model="{{workflow.parameters.cvat-model}}" \
                --num_classes="{{workflow.parameters.cvat-num-classes}}" \
                --sys_finetune_checkpoint="{{workflow.parameters.cvat-finetune-checkpoint}}" \
                --from_preprocessing=True
        command:
            - sh
            - -c
        image: '{{workflow.parameters.tf-image}}'
        volumeMounts:
            - mountPath: /mnt/data
              name: processed-data
            - mountPath: /mnt/output
              name: output
        workingDir: /mnt/src
      inputs:
        artifacts:
            - name: data
              path: /mnt/data/datasets/
            - name: models
              optional: true
              path: /mnt/data/models/
              s3:
                key: '{{workflow.parameters.cvat-finetune-checkpoint}}'
            - git:
                repo: https://gitclone.com/github.com/tensorflow/models.git
                revision: v1.13.0
              name: src
              path: /mnt/src/tf
            - git:
                repo: https://gitclone.com/github.com/onepanelio/templates.git
                revision: v1.0.0
              name: tsrc
              path: /mnt/src/train
      name: tensorflow
      nodeSelector:
        'beta.kubernetes.io/instance-type': '{{workflow.parameters.sys-node-pool}}'
      outputs:
        artifacts:
            - name: model
              optional: true
              path: /mnt/output
      sidecars:
        - args:
            - tensorboard --logdir /mnt/output/checkpoints/
          command:
            - sh
            - -c
          env:
            - name: ONEPANEL_INTERACTIVE_SIDECAR
              value: "true"
          image: '{{workflow.parameters.tf-image}}'
          name: tensorboard
          ports:
            - containerPort: 6006
              name: tensorboard
    - container:
        args:
            - |
              pip install --upgrade pip &&\
              pip install opencv-python albumentations tqdm pyyaml pycocotools && \
              cd /mnt/src/preprocessing/workflows/albumentations-preprocessing && \
              python -u main.py \
                --data_aug_params="{{workflow.parameters.preprocessing-parameters}}" \
                --format="tfrecord" \
                --val_split={{workflow.parameters.val-split}} \
                --aug_steps={{workflow.parameters.num-augmentation-cycles}}
        command:
            - sh
            - -c
        image: '{{workflow.parameters.tf-image}}'
        volumeMounts:
            - mountPath: /mnt/data
              name: data
            - mountPath: /mnt/output
              name: processed-data
        workingDir: /mnt/src
      inputs:
        artifacts:
            - name: data
              path: /mnt/data/datasets/
              s3:
                key: '{{workflow.parameters.cvat-annotation-path}}'
            - git:
                repo: https://github.com/onepanelio/templates.git
                revision: v0.18.0
              name: src
              path: /mnt/src/preprocessing
      name: preprocessing
      nodeSelector:
        'beta.kubernetes.io/instance-type': '{{workflow.parameters.sys-node-pool}}'
      outputs:
        artifacts:
            - name: processed-data
              optional: true
              path: /mnt/output
volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
            - ReadWriteOnce
        resources:
            requests:
                storage: 10Gi
    - metadata:
        name: processed-data
      spec:
        accessModes:
            - ReadWriteOnce
        resources:
            requests:
                storage: 10Gi
    - metadata:
        name: output
      spec:
        accessModes:
            - ReadWriteOnce
        resources:
            requests:
                storage: 10Gi
